local playermatApi                = require("playermat/PlayermatApi")
local guidReferenceApi            = require("core/GUIDReferenceApi")
-- local GlobalApi                   = require("core/GlobalApi")
local searchLib                   = require("util/SearchLib")

function onLoad()
    params = {
        click_function = "testFunc",
        function_owner = self,
        width          = 800,
        height         = 800,
        font_size      = 340,
        color          = {0.5, 0.5, 0.5},
        font_color     = {1, 1, 1},
        tooltip        = "i'm walkin here",
    }
    self.createButton(params)
end

function testFunc(obj, player_clicker_color, alt_click)
    local matColor = playermatApi.getMatColorByPosition(self.getPosition())
    log("matColor: " .. matColor)
    
    -- local mat = guidReferenceApi.getObjectByOwnerAndType(matColor, "Playermat")
    local mat = playermatApi.getMatForColor(matColor) -- no idea why this doesn't work
    log("playermat: ")
    log(mat)
    
    -- local localInvestigatorPosition = { x = -1.17, y = 1, z = -0.01 } -- stolen from PlayermatApi
    -- local searchPos = mat.positionToWorld(localInvestigatorPosition)
    -- local searchResult = searchLib.atPosition(searchPos, "isCardOrDeck")
    -- local invest
    -- if #searchResult == 1 then
    --     invest = searchResult[1]
    -- else
    --     printToAll("Error: Could not find investigator", {1, 0, 0})
    --     return -- nothing else we can do without an investigator loaded
    -- end

    -- local md = JSON.decode(invest.getGMNotes()) or {}
    -- log("md:")
    -- log(md)

    -- ownedObjects.InvestigatorSkillTracker.call("updateStats", {
    --     md.willpowerIcons,
    --     md.intellectIcons,
    --     md.combatIcons,
    --     md.agilityIcons
    --   })


end
